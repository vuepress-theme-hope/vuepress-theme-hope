root: true

env:
  node: true
  es6: true

extends:
  - plugin:vue/vue3-recommended
  - eslint:recommended
  - plugin:@typescript-eslint/recommended
  - plugin:@typescript-eslint/recommended-requiring-type-checking
  - plugin:prettier/recommended

settings:
  # import/resolver:
  #   # You will also need to install and configure the TypeScript resolver
  #   # See also https://github.com/import-js/eslint-import-resolver-typescript#configuration
  #   typescript: true
  #   node: true
  import/internal-regex: ^@(?:internal|temp|theme-hope)/

parser: vue-eslint-parser

plugins:
  - import

parserOptions:
  parser: "@typescript-eslint/parser"
  project:
    - "./tsconfig.json"
  extraFileExtensions:
    - .vue
  vueFeatures:
    filter: false

ignorePatterns:
  - "**/dist/**"
  - "**/node_modules/**"
  - "coverage/**"
  - "docs-shared/lib/**"
  - "packages/*/assets/**"
  - "packages/*/lib/**"
  - "packages/create/template/**"
  - "!**/.vuepress/**"
  - "**/.vuepress/.cache/**"
  - "**/.vuepress/.temp/**"

rules:
  "@typescript-eslint/ban-ts-comment":
    - off

  "@typescript-eslint/explicit-function-return-type":
    - warn
    - allowTypedFunctionExpressions: true

  "@typescript-eslint/naming-convention":
    - warn
    - selector: default
      format:
        - camelCase
      leadingUnderscore: allowSingleOrDouble
      trailingUnderscore: allow

    - selector:
        - variable
      format:
        - camelCase
        - PascalCase
        - UPPER_CASE
      leadingUnderscore: allowSingleOrDouble
      trailingUnderscore: allowSingleOrDouble

    - selector:
        - parameter
      format:
        - camelCase
        - PascalCase
      leadingUnderscore: allow
      trailingUnderscore: allow

    - selector:
        - property
      format: null
      custom:
        regex: (^/.*/$|^@|^[a-z]+(?:-[a-z]+)*?$)
        match: true
      # allow locales path like `/zh/`, alias starting with `@` and css property like `line-width`
      filter: (^/.*/$|^@|^[a-z]+(?:-[a-z]+)*?$)
      leadingUnderscore: allow
      trailingUnderscore: allow

    - selector:
        - property
      format:
        - camelCase
        - PascalCase
        - UPPER_CASE
      leadingUnderscore: allow
      trailingUnderscore: allow

    - selector: typeLike
      format:
        - PascalCase

  "@typescript-eslint/no-explicit-any":
    - warn
    - ignoreRestArgs: true

  "@typescript-eslint/no-non-null-assertion":
    - off

  "@typescript-eslint/no-unsafe-member-access":
    - warn

  curly:
    - error
    - multi
    - consistent

  import/consistent-type-specifier-style:
    - error
    - prefer-top-level

  import/dynamic-import-chunkname:
    - error

  import/first:
    - error

  import/newline-after-import:
    - error

  import/no-commonjs:
    - error

  import/no-cycle:
    - error

  import/no-duplicates:
    - error
    - considerQueryString: true

  import/no-named-default:
    - error

  import/no-restricted-paths:
    - error
    - zones:
        - target: packages/*/src/client/**
          from: packages/*/src/node/**
        - target: packages/*/src/node/**
          from: packages/*/src/client/**

  import/order:
    - error
    - alphabetize:
        order: asc
        orderImportKind: asc
      groups:
        - builtin
        - external
        - internal
        - - parent
          - sibling
        - index
        - object
      newlines-between: always

  no-duplicate-imports:
    - off

  no-unmodified-loop-condition:
    - error

  padding-line-between-statements:
    - error
    - blankLine: always
      prev:
        - const
        - let
      next:
        - "*"
    - blankLine: any
      prev:
        - const
        - let
      next:
        - const
        - let
    - blankLine: always
      prev:
        - "*"
      next:
        - return

  sort-imports:
    - error
    - allowSeparatedGroups: false
      ignoreDeclarationSort: true

  vue/block-lang:
    - error
    - script:
        lang: ts

  vue/block-tag-newline:
    - error

  vue/component-api-style:
    - error

  vue/component-name-in-template-casing:
    - error

  vue/component-options-name-casing:
    - error

  vue/custom-event-name-casing:
    - error

  vue/define-emits-declaration:
    - error

  vue/define-macros-order:
    - error

  vue/define-props-declaration:
    - error

  vue/html-button-has-type:
    - error

  vue/html-comment-content-newline:
    - error

  vue/html-comment-content-spacing:
    - error

  vue/html-comment-indent:
    - error

  vue/match-component-file-name:
    - error

  vue/match-component-import-name:
    - error

  vue/new-line-between-multi-line-property:
    - error

  vue/next-tick-style:
    - error

  vue/no-boolean-default:
    - warn

  vue/no-duplicate-attr-inheritance:
    - error

  vue/no-empty-component-block:
    - error

  vue/no-multiple-objects-in-class:
    - error

  vue/no-potential-component-option-typo:
    - error

  vue/no-ref-object-destructure:
    - error

  vue/no-required-prop-with-default:
    - error

  vue/no-static-inline-styles:
    - error

  vue/no-template-target-blank:
    - error

  vue/no-this-in-before-route-enter:
    - error

  vue/no-undef-components:
    - error

  vue/no-undef-properties:
    - warn

  vue/no-unsupported-features:
    - error

  vue/no-unused-properties:
    - error

  vue/no-unused-refs:
    - error

  vue/no-useless-mustaches:
    - error

  vue/no-useless-v-bind:
    - error

  vue/padding-line-between-blocks:
    - error

  vue/padding-line-between-tags:
    - error

  vue/prefer-prop-type-boolean-first:
    - error

  vue/prefer-separate-static-class:
    - error

  vue/prefer-true-attribute-shorthand:
    - error

  vue/require-direct-export:
    - error

  vue/require-emit-validator:
    - off

  vue/require-expose:
    - error

  vue/require-name-property:
    - error

  vue/require-prop-comment:
    - error

  vue/script-indent:
    - error

  vue/static-class-names-order:
    - error

  vue/v-for-delimiter-style:
    - error

overrides:
  - files:
      - "*.vue"
    rules:
      vue/sort-keys:
        - error

  - files:
      - "*.d.ts"
    rules:
      no-underscore-dangle:
        - off

  - files:
      - "**/__tests__/**/*.spec.{j,t}s?(x)"

    rules:
      "@typescript-eslint/no-explicit-any":
        - off
      "@typescript-eslint/no-unsafe-call":
        - off
      "@typescript-eslint/no-unsafe-assignment":
        - off
      "@typescript-eslint/no-unsafe-member-access":
        - off
      import/dynamic-import-chunkname:
        - off
