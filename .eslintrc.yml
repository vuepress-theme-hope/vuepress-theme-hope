root: true

env:
  node: true
  es6: true

extends:
  - plugin:vue/vue3-recommended
  - eslint:recommended
  - plugin:prettier/recommended

ignorePatterns:
  - "!.vuepress/**"
  - "**/dist/**"
  - "**/node_modules/**"
  - ".cache/**"
  - ".temp/**"
  - "docs/shared/lib/**"
  - "packages/*/lib/**"

rules:
  padding-line-between-statements:
    - error
    - blankLine: always
      prev:
        - const
        - let
      next:
        - "*"
    - blankLine: any
      prev:
        - const
        - let
      next:
        - const
        - let
    - blankLine: always
      prev:
        - "*"
      next:
        - return

overrides:
  - files:
      - "*.vue"

    extends:
      - plugin:@typescript-eslint/eslint-recommended
      - plugin:@typescript-eslint/recommended
      - plugin:prettier/recommended
      - "@vue/typescript/recommended"

    plugins:
      - "@typescript-eslint"

    parser: vue-eslint-parser

    parserOptions:
      extraFileExtensions:
        - .vue
      parser: "@typescript-eslint/parser"

    rules:
      "@typescript-eslint/explicit-function-return-type":
        - warn
        - allowTypedFunctionExpressions: true

      "@typescript-eslint/naming-convention":
        - warn
        - selector: default
          format:
            - camelCase
          leadingUnderscore: allow
          trailingUnderscore: allow

        - selector:
            - variable
          format:
            - camelCase
            - UPPER_CASE
          leadingUnderscore: allow
          trailingUnderscore: allow

        - selector:
            - property
          format:
            - camelCase
            - PascalCase
          leadingUnderscore: allow
          trailingUnderscore: allow

        - selector: typeLike
          format:
            - PascalCase

      "@typescript-eslint/no-explicit-any":
        - warn
        - ignoreRestArgs: true

  - files:
      - "*.ts"

    extends:
      - plugin:@typescript-eslint/eslint-recommended
      - plugin:@typescript-eslint/recommended
      - plugin:@typescript-eslint/recommended-requiring-type-checking
      - plugin:prettier/recommended

    plugins:
      - "@typescript-eslint"

    parser: vue-eslint-parser

    parserOptions:
      parser: "@typescript-eslint/parser"
      project:
        - "./tsconfig.json"

    rules:
      "@typescript-eslint/explicit-function-return-type":
        - warn
        - allowTypedFunctionExpressions: true

      "@typescript-eslint/naming-convention":
        - warn
        - selector: default
          format:
            - camelCase
          leadingUnderscore: allowSingleOrDouble
          trailingUnderscore: allow

        - selector:
            - variable
          format:
            - camelCase
            - PascalCase
            - UPPER_CASE
          leadingUnderscore: allowSingleOrDouble
          trailingUnderscore: allow

        - selector:
            - parameter
          format:
            - camelCase
            - PascalCase
          leadingUnderscore: allow
          trailingUnderscore: allow

        - selector:
            - property
          format: null
          custom:
            regex: (^/.*/$|^@|^[a-z]+(?:-[a-z]+)*?$)
            match: true
          # allow locales path like `/zh/`, alias starting with `@` and css property like `line-width`
          filter: (^/.*/$|^@|^[a-z]+(?:-[a-z]+)*?$)
          leadingUnderscore: allow
          trailingUnderscore: allow

        - selector:
            - property
          format:
            - camelCase
            - PascalCase
            - UPPER_CASE
          leadingUnderscore: allow
          trailingUnderscore: allow

        - selector: typeLike
          format:
            - PascalCase

      "@typescript-eslint/no-explicit-any":
        - warn
        - ignoreRestArgs: true

      "@typescript-eslint/no-non-null-assertion":
        - off

      "@typescript-eslint/no-unsafe-member-access":
        - warn

  - files:
      - "*.d.ts"
    rules:
      no-underscore-dangle:
        - off

  - files:
      - "**/__tests__/**/*.spec.{j,t}s?(x)"

    rules:
      "@typescript-eslint/no-explicit-any":
        - off
      "@typescript-eslint/no-unsafe-call":
        - off
      "@typescript-eslint/no-unsafe-assignment":
        - off
      "@typescript-eslint/no-unsafe-member-access":
        - off
