name: Test V2 Demo

on:
  push:
    branches:
      - main
      - work
  pull_request:
    branches:
      - main

jobs:
  test-demos:
    name: Test demos on node ${{ matrix.node }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node:
          - "12"
          - "14"
          - "16"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # use node 16 to build project here
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore lerna
        uses: actions/cache@v3
        id: lerna-cache
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('yarn.lock') }}

      - name: Get yarn cache directory path
        if: steps.lerna-cache.outputs.cache-hit != 'true'
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: yarn-cache
        if: steps.lerna-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Deps
        if: steps.lerna-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Build project
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: yarn run build

      # test with specific node version
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Webpack build test
        run: |
          yarn lerna run demo:webpack-build

      - name: Vite build test
        run: |
          yarn lerna run demo:vite-build

  linter-and-unit:
    name: Linter and Unit test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: restore lerna
        uses: actions/cache@v3
        id: lerna-cache
        with:
          path: |
            node_modules
            **/node_modules
          key: ${{ runner.os }}-lerna-${{ hashFiles('yarn.lock') }}

      - name: Get yarn cache directory path
        if: steps.lerna-cache.outputs.cache-hit != 'true'
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: yarn-cache
        if: steps.lerna-cache.outputs.cache-hit != 'true'
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Deps
        if: steps.lerna-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Build project
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: yarn run build

      - name: Linter test
        run: |
          yarn run lint:check
          yarn run lint:md

      - name: Unit test
        env:
          NODE_OPTIONS: --max_old_space_size=4096
        run: yarn run test

      - name: Upload coverage
        if: github.ref == 'refs/heads/main'
        uses: codecov/codecov-action@v3
