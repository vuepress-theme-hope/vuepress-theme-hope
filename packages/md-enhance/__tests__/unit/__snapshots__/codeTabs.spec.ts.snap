// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`code tabs > Should render multiple block 1`] = `
"<CodeTabs id="0" :data='[{"id":"js"},{"id":"ts"}]'>
<template #title0="{ value, isActive }">js</template>
<template #title1="{ value, isActive }">ts</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
<template #tab1="{ value, isActive }">
<pre><code class="language-ts">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should render multiple block 2`] = `
"<CodeTabs id="0" :data='[{"id":"js"},{"id":"ts"}]'>
<template #title0="{ value, isActive }">js</template>
<template #title1="{ value, isActive }">ts</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
<template #tab1="{ value, isActive }">
<pre><code class="language-ts">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should render single block 1`] = `
"<CodeTabs id="0" :data='[{"id":"js"}]'>
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should render single block 2`] = `
"<CodeTabs id="0" :data='[{"id":"js"}]'>
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support active 1`] = `
"<CodeTabs id="0" :data='[{"id":"js"}]' :active="0">
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support active 2`] = `
"<CodeTabs id="0" :data='[{"id":"js"}]' :active="0">
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support active 3`] = `
"<CodeTabs id="0" :data='[{"id":"js"},{"id":"ts"}]' :active="1">
<template #title0="{ value, isActive }">js</template>
<template #title1="{ value, isActive }">ts</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
<template #tab1="{ value, isActive }">
<pre><code class="language-ts">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support active 4`] = `
"<CodeTabs id="0" :data='[{"id":"js"},{"id":"ts"}]' :active="1">
<template #title0="{ value, isActive }">js</template>
<template #title1="{ value, isActive }">ts</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
<template #tab1="{ value, isActive }">
<pre><code class="language-ts">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support id 1`] = `
"<CodeTabs id="0" :data='[{"id":"js"}]' tab-id="event">
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support id 2`] = `
"<CodeTabs id="0" :data='[{"id":"js"}]' tab-id="event-id">
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support id 3`] = `
"<CodeTabs id="0" :data='[{"id":"js"}]' tab-id="id with space">
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support id 4`] = `
"<CodeTabs id="0" :data='[{"id":"js"}]' tab-id="id starts and having space in the end">
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support value 1`] = `
"<CodeTabs id="0" :data='[{"id":"javascript"}]'>
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support value 2`] = `
"<CodeTabs id="0" :data='[{"id":"javascript"}]' :active="0">
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support value 3`] = `
"<CodeTabs id="0" :data='[{"id":"js"},{"id":"typescript"}]' :active="1">
<template #title0="{ value, isActive }">js</template>
<template #title1="{ value, isActive }">ts</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
<template #tab1="{ value, isActive }">
<pre><code class="language-ts">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should support value 4`] = `
"<CodeTabs id="0" :data='[{"id":"javascript"},{"id":"typescript"}]' :active="1">
<template #title0="{ value, isActive }">js</template>
<template #title1="{ value, isActive }">ts</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
<template #tab1="{ value, isActive }">
<pre><code class="language-ts">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > Should work with code import 1`] = `
"<CodeTabs id="0" :data='[{"id":"js"},{"id":"ts"}]' :active="1">
<template #title0="{ value, isActive }">js</template>
<template #title1="{ value, isActive }">ts</template>
<template #tab0="{ value, isActive }">
<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre v-pre class="language-javascript"><code>const a = 1;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></template>
<template #tab1="{ value, isActive }">
<div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre v-pre class="language-typescript"><code>Error when resolving path</code></pre><div class="line-numbers" aria-hidden="true"></div></div></template>
</CodeTabs>
"
`;

exports[`code tabs > should ignore other items 1`] = `
"<CodeTabs id="0" :data='[{"id":"js"}]' :active="0">
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > should ignore other items 2`] = `
"<CodeTabs id="0" :data='[{"id":"js"}]' :active="0">
<template #title0="{ value, isActive }">js</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > should ignore other items 3`] = `
"<CodeTabs id="0" :data='[{"id":"js"},{"id":"ts"}]' :active="1">
<template #title0="{ value, isActive }">js</template>
<template #title1="{ value, isActive }">ts</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
<template #tab1="{ value, isActive }">
<pre><code class="language-ts">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;

exports[`code tabs > should ignore other items 4`] = `
"<CodeTabs id="0" :data='[{"id":"js"},{"id":"ts"}]' :active="1">
<template #title0="{ value, isActive }">js</template>
<template #title1="{ value, isActive }">ts</template>
<template #tab0="{ value, isActive }">
<pre><code class="language-js">const a = 1;
</code></pre>
</template>
<template #tab1="{ value, isActive }">
<pre><code class="language-ts">const a = 1;
</code></pre>
</template>
</CodeTabs>
"
`;
