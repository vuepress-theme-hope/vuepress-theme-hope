diff --git a/lib/shared/helper.d.ts b/lib/shared/helper.d.ts
index 8e5016d9e0f442dd1a9e727fbd9620d1fa0cee21..da68083dcc92e719fe6ad233d4b698a7cebbad3f 100644
--- a/lib/shared/helper.d.ts
+++ b/lib/shared/helper.d.ts
@@ -1,4 +1,12 @@
-export { isFunction, isString, isPlainObject } from 'vuepress/shared';
+export {
+  ensureEndingSlash,
+  ensureLeadingSlash,
+  isFunction,
+  isString,
+  isPlainObject,
+  removeEndingSlash,
+  removeLeadingSlash,
+} from "vuepress/shared";
 export declare const isDef: <T = any>(val?: T | undefined) => val is T;
 export declare const isBoolean: (val: any) => val is boolean;
 export declare const isNumber: (val: any) => val is number;
@@ -7,24 +15,32 @@ export declare const isRegExp: (val: unknown) => val is RegExp;
 export declare const startsWith: (str: unknown, prefix: string) => boolean;
 export declare const endsWith: (str: unknown, suffix: string) => boolean;
 export declare const entries: {
-    <T>(o: {
-        [s: string]: T;
-    } | ArrayLike<T>): [string, T][];
-    (o: {}): [string, any][];
+  <T>(
+    o:
+      | {
+          [s: string]: T;
+        }
+      | ArrayLike<T>
+  ): [string, T][];
+  (o: {}): [string, any][];
 };
 export declare const fromEntries: {
-    <T = any>(entries: Iterable<readonly [PropertyKey, T]>): {
-        [k: string]: T;
-    };
-    (entries: Iterable<readonly any[]>): any;
+  <T = any>(entries: Iterable<readonly [PropertyKey, T]>): {
+    [k: string]: T;
+  };
+  (entries: Iterable<readonly any[]>): any;
 };
 export declare const keys: {
-    (o: object): string[];
-    (o: {}): string[];
+  (o: object): string[];
+  (o: {}): string[];
 };
 export declare const values: {
-    <T>(o: {
-        [s: string]: T;
-    } | ArrayLike<T>): T[];
-    (o: {}): any[];
+  <T>(
+    o:
+      | {
+          [s: string]: T;
+        }
+      | ArrayLike<T>
+  ): T[];
+  (o: {}): any[];
 };
diff --git a/lib/shared/helper.js b/lib/shared/helper.js
index 048760c8a4bc1f598c99a23d12205aaa67765a65..a4496d8b2b1139d675f900092a5fc10cc74d5448 100644
--- a/lib/shared/helper.js
+++ b/lib/shared/helper.js
@@ -1,13 +1,21 @@
-import { isString } from 'vuepress/shared';
-export { isFunction, isString, isPlainObject } from 'vuepress/shared';
-/* Type helper */
-export const isDef = (val) => typeof val !== 'undefined';
-export const isBoolean = (val) => typeof val === 'boolean';
-export const isNumber = (val) => typeof val === 'number';
+import { isString } from "vuepress/shared";
+export {
+  ensureEndingSlash,
+  ensureLeadingSlash,
+  isFunction,
+  isString,
+  isPlainObject,
+  removeEndingSlash,
+  removeLeadingSlash,
+} from "vuepress/shared"; /* Type helper */
+export const isDef = (val) => typeof val !== "undefined";
+export const isBoolean = (val) => typeof val === "boolean";
+export const isNumber = (val) => typeof val === "number";
 export const isArray = Array.isArray;
 export const isRegExp = (val) => val instanceof RegExp;
 /* String helper */
-export const startsWith = (str, prefix) => isString(str) && str.startsWith(prefix);
+export const startsWith = (str, prefix) =>
+  isString(str) && str.startsWith(prefix);
 export const endsWith = (str, suffix) => isString(str) && str.endsWith(suffix);
 /* Object helper */
 export const entries = Object.entries;
